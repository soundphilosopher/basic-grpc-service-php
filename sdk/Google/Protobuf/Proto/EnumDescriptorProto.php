<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: google/protobuf/descriptor.proto

namespace Google\Protobuf\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 * Describes an enum type.
 *
 * Generated from protobuf message <code>google.protobuf.EnumDescriptorProto</code>
 */
class EnumDescriptorProto extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string name = 1 [json_name = "name"];</code>
     */
    protected $name = null;
    /**
     * Generated from protobuf field <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2 [json_name = "value"];</code>
     */
    private $value;
    /**
     * Generated from protobuf field <code>optional .google.protobuf.EnumOptions options = 3 [json_name = "options"];</code>
     */
    protected $options = null;
    /**
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     *
     * Generated from protobuf field <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4 [json_name = "reservedRange"];</code>
     */
    private $reserved_range;
    /**
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     *
     * Generated from protobuf field <code>repeated string reserved_name = 5 [json_name = "reservedName"];</code>
     */
    private $reserved_name;
    /**
     * Support for `export` and `local` keywords on enums.
     *
     * Generated from protobuf field <code>optional .google.protobuf.SymbolVisibility visibility = 6 [json_name = "visibility"];</code>
     */
    protected $visibility = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *     @type \Google\Protobuf\Proto\EnumValueDescriptorProto[] $value
     *     @type \Google\Protobuf\Proto\EnumOptions $options
     *     @type \Google\Protobuf\Proto\EnumDescriptorProto\EnumReservedRange[] $reserved_range
     *           Range of reserved numeric values. Reserved numeric values may not be used
     *           by enum values in the same enum declaration. Reserved ranges may not
     *           overlap.
     *     @type string[] $reserved_name
     *           Reserved enum value names, which may not be reused. A given name may only
     *           be reserved once.
     *     @type int $visibility
     *           Support for `export` and `local` keywords on enums.
     * }
     */
    public function __construct($data = NULL) {
        \Google\Protobuf\GPBMetadata\Descriptor::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string name = 1 [json_name = "name"];</code>
     * @return string
     */
    public function getName()
    {
        return isset($this->name) ? $this->name : '';
    }

    public function hasName()
    {
        return isset($this->name);
    }

    public function clearName()
    {
        unset($this->name);
    }

    /**
     * Generated from protobuf field <code>optional string name = 1 [json_name = "name"];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2 [json_name = "value"];</code>
     * @return RepeatedField<\Google\Protobuf\Proto\EnumValueDescriptorProto>
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * Generated from protobuf field <code>repeated .google.protobuf.EnumValueDescriptorProto value = 2 [json_name = "value"];</code>
     * @param \Google\Protobuf\Proto\EnumValueDescriptorProto[] $var
     * @return $this
     */
    public function setValue($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Proto\EnumValueDescriptorProto::class);
        $this->value = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .google.protobuf.EnumOptions options = 3 [json_name = "options"];</code>
     * @return \Google\Protobuf\Proto\EnumOptions|null
     */
    public function getOptions()
    {
        return $this->options;
    }

    public function hasOptions()
    {
        return isset($this->options);
    }

    public function clearOptions()
    {
        unset($this->options);
    }

    /**
     * Generated from protobuf field <code>optional .google.protobuf.EnumOptions options = 3 [json_name = "options"];</code>
     * @param \Google\Protobuf\Proto\EnumOptions $var
     * @return $this
     */
    public function setOptions($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Proto\EnumOptions::class);
        $this->options = $var;

        return $this;
    }

    /**
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     *
     * Generated from protobuf field <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4 [json_name = "reservedRange"];</code>
     * @return RepeatedField<\Google\Protobuf\Proto\EnumDescriptorProto\EnumReservedRange>
     */
    public function getReservedRange()
    {
        return $this->reserved_range;
    }

    /**
     * Range of reserved numeric values. Reserved numeric values may not be used
     * by enum values in the same enum declaration. Reserved ranges may not
     * overlap.
     *
     * Generated from protobuf field <code>repeated .google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4 [json_name = "reservedRange"];</code>
     * @param \Google\Protobuf\Proto\EnumDescriptorProto\EnumReservedRange[] $var
     * @return $this
     */
    public function setReservedRange($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Proto\EnumDescriptorProto\EnumReservedRange::class);
        $this->reserved_range = $arr;

        return $this;
    }

    /**
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     *
     * Generated from protobuf field <code>repeated string reserved_name = 5 [json_name = "reservedName"];</code>
     * @return RepeatedField<string>
     */
    public function getReservedName()
    {
        return $this->reserved_name;
    }

    /**
     * Reserved enum value names, which may not be reused. A given name may only
     * be reserved once.
     *
     * Generated from protobuf field <code>repeated string reserved_name = 5 [json_name = "reservedName"];</code>
     * @param string[] $var
     * @return $this
     */
    public function setReservedName($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->reserved_name = $arr;

        return $this;
    }

    /**
     * Support for `export` and `local` keywords on enums.
     *
     * Generated from protobuf field <code>optional .google.protobuf.SymbolVisibility visibility = 6 [json_name = "visibility"];</code>
     * @return int
     */
    public function getVisibility()
    {
        return isset($this->visibility) ? $this->visibility : 0;
    }

    public function hasVisibility()
    {
        return isset($this->visibility);
    }

    public function clearVisibility()
    {
        unset($this->visibility);
    }

    /**
     * Support for `export` and `local` keywords on enums.
     *
     * Generated from protobuf field <code>optional .google.protobuf.SymbolVisibility visibility = 6 [json_name = "visibility"];</code>
     * @param int $var
     * @return $this
     */
    public function setVisibility($var)
    {
        GPBUtil::checkEnum($var, \Google\Protobuf\Proto\SymbolVisibility::class);
        $this->visibility = $var;

        return $this;
    }

}

