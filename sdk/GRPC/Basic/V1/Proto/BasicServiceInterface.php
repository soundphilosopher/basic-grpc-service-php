<?php
# Generated by the protocol buffer compiler (roadrunner-server/grpc). DO NOT EDIT!
# source: basic/v1/basic.proto

namespace GRPC\Basic\V1\Proto;

use Spiral\RoadRunner\GRPC;

interface BasicServiceInterface extends GRPC\ServiceInterface
{
    // GRPC specific service name.
    public const NAME = "basic.v1.BasicService";

    /**
    * @param GRPC\ContextInterface $ctx
    * @param \GRPC\Basic\Service\V1\Proto\HelloRequest $in
    * @return \GRPC\Basic\Service\V1\Proto\HelloResponse
    *
    * @throws GRPC\Exception\InvokeException
    */
    public function Hello(GRPC\ContextInterface $ctx, \GRPC\Basic\Service\V1\Proto\HelloRequest $in): \GRPC\Basic\Service\V1\Proto\HelloResponse;

    /**
    * @param GRPC\ContextInterface $ctx
    * @param \GRPC\Basic\Service\V1\Proto\TalkRequest $in
    * @return \GRPC\Basic\Service\V1\Proto\TalkResponse
    *
    * @throws GRPC\Exception\InvokeException
    */
    public function Talk(GRPC\ContextInterface $ctx, \GRPC\Basic\Service\V1\Proto\TalkRequest $in): \GRPC\Basic\Service\V1\Proto\TalkResponse;

    /**
    * @param GRPC\ContextInterface $ctx
    * @param \GRPC\Basic\Service\V1\Proto\BackgroundRequest $in
    * @return \GRPC\Basic\Service\V1\Proto\BackgroundResponse
    *
    * @throws GRPC\Exception\InvokeException
    */
    public function Background(GRPC\ContextInterface $ctx, \GRPC\Basic\Service\V1\Proto\BackgroundRequest $in): \GRPC\Basic\Service\V1\Proto\BackgroundResponse;
}
